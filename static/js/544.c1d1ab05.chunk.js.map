{"version":3,"file":"static/js/544.c1d1ab05.chunk.js","mappings":"6JAiBA,IAfe,WACb,OACE,SAAC,KAAD,CACEA,OAAO,KACPC,MAAM,KACNC,OAAQ,EACRC,MAAM,UACNC,UAAU,eACVC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,GAGd,C,sGCZYC,GAAOC,EAAAA,EAAAA,IAAO,MAAPA,CAAH,4EAMJC,GAAWD,EAAAA,EAAAA,IAAOE,EAAAA,GAAPF,CAAH,qe,SCarB,EAjB2B,SAAC,GAAwB,IAAtBG,EAAqB,EAArBA,eACtBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,SAACN,EAAD,UACGI,EAAeG,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,YAAd,OAClB,UAACR,EAAD,CAAUS,GAAE,kBAAaH,GAAeI,MAAO,CAAEC,KAAMR,GAAvD,WACE,gBACES,IAAK,kCAAoCJ,EACzCjB,MAAM,OACNsB,IAAKN,KAEP,uBAAIA,MAN8BD,EADlB,KAYzB,C,+GCmBD,UAhCa,WACX,OAA4CQ,EAAAA,EAAAA,UAAS,IAArD,eAAOZ,EAAP,KAAuBa,EAAvB,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KAkBA,OAhBAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,IACbE,EAAAA,EAAAA,MACGC,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACFA,EAAQC,OAIbP,EAAkBM,GAHhBE,IAAAA,OAAAA,QAAwB,yBAI3B,IACAC,OAAM,WACLD,IAAAA,OAAAA,QAAwB,0BACzB,IACAE,SAAQ,kBAAMR,GAAa,EAAnB,GACZ,GAAE,KAGD,6BACE,0CACCD,GACC,SAAC,IAAD,KAEA,SAAC,IAAD,CAAoBd,eAAgBA,MAI3C,C,mMClCKwB,EAAM,qCACNC,EAAU,mCAEHC,EAAe,mCAAG,WAAMtB,GAAN,kFACvBuB,EAAe,IAAIC,gBAAgB,CACvCC,QAASJ,IAFkB,SAINK,EAAAA,EAAAA,IAAA,UAAaN,EAAb,YAAoBpB,EAApB,YAA0BuB,IAJpB,uBAIrBI,EAJqB,EAIrBA,KAJqB,kBAMtBA,GANsB,2CAAH,sDASfC,EAAY,mCAAG,WAAM5B,GAAN,kFACpBuB,EAAe,IAAIC,gBAAgB,CACvCC,QAASJ,IAFe,SAIHK,EAAAA,EAAAA,IAAA,UAAaN,EAAb,YAAoBpB,EAApB,oBAAkCuB,IAJ/B,uBAIlBI,EAJkB,EAIlBA,KAJkB,kBAMnBA,GANmB,2CAAH,sDASZE,EAAe,mCAAG,WAAM7B,GAAN,kFACvBuB,EAAe,IAAIC,gBAAgB,CACvCC,QAASJ,IAFkB,SAINK,EAAAA,EAAAA,IAAA,UAAaN,EAAb,YAAoBpB,EAApB,oBAAkCuB,IAJ5B,uBAIrBI,EAJqB,EAIrBA,KAJqB,kBAMtBA,GANsB,2CAAH,sDASfG,EAAe,mCAAG,WAAMC,GAAN,kFACvBR,EAAe,IAAIC,gBAAgB,CACvCC,QAASJ,EACTW,eAAe,EACfD,MAAOA,IAJoB,SAMNL,EAAAA,EAAAA,IAAA,UAtCN,4CAsCM,YAA2BH,IANrB,uBAMrBI,EANqB,EAMrBA,KANqB,kBAQtBA,GARsB,2CAAH,sDAWfd,EAAiB,mCAAG,+FACzBU,EAAe,IAAIC,gBAAgB,CACvCC,QAASJ,EACTW,eAAe,IAHc,SAKRN,EAAAA,EAAAA,IAAA,UA/CJ,kDA+CI,YAA6BH,IALrB,uBAKvBI,EALuB,EAKvBA,KALuB,kBAOxBA,GAPwB,2CAAH,oD","sources":["components/Loader/Loader.jsx","components/TrendingMoviesList/TrendingMoviesList.Styled.js","components/TrendingMoviesList/TrendingMoviesList.jsx","pages/Home/Home.jsx","services/movieDataAPI.js"],"sourcesContent":["import { Puff } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <Puff\n      height=\"80\"\n      width=\"80\"\n      radius={1}\n      color=\"#4fa94d\"\n      ariaLabel=\"puff-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"\"\n      visible={true}\n    />\n  );\n};\n\nexport default Loader;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled('div')`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n`;\n\nexport const LinkItem = styled(Link)`\n  display: flex;\n  gap: 5px;\n  flex-wrap: nowrap;\n  flex-basis: 49%;\n  min-width: 250px;\n  border: 2px solid #8c46a3;\n  border-radius: 4px;\n  text-decoration: none;\n  font-size: 20px;\n  color: #75367d;\n\n  &.active {\n    background-color: blue;\n    color: #ffffff;\n  }\n\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    color: #ca3fdd;\n    background-color: #ffd0f448;\n    border-color: #8c46a37e;\n    transform: scale(1.02);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\n\nimport { List, LinkItem } from './TrendingMoviesList.Styled';\n\nconst TrendingMoviesList = ({ trendingMovies }) => {\n  const location = useLocation();\n  return (\n    <List>\n      {trendingMovies.map(({ id, title, poster_path }) => (\n        <LinkItem to={`/movies/${id}`} key={id} state={{ from: location }}>\n          <img\n            src={'https://image.tmdb.org/t/p/w500' + poster_path}\n            width=\"70px\"\n            alt={title}\n          ></img>\n          <p>{title}</p>\n        </LinkItem>\n      ))}\n    </List>\n  );\n};\nexport default TrendingMoviesList;\n\nTrendingMoviesList.propTypes = {\n  trendingMovies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n","import Notiflix from 'notiflix';\nimport { useState, useEffect } from 'react';\n\nimport TrendingMoviesList from 'components/TrendingMoviesList/TrendingMoviesList';\nimport Loader from 'components/Loader/Loader';\n// import trendingMoviesAPI from 'services/trendingMoviesAPI';\nimport { trendingMoviesAPI } from 'services/movieDataAPI';\n\nconst Home = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    trendingMoviesAPI()\n      .then(({ results }) => {\n        if (!results.length) {\n          Notiflix.Notify.failure('Oops, list is empty...');\n          return;\n        }\n        setTrendingMovies(results);\n      })\n      .catch(() => {\n        Notiflix.Notify.failure('Something went wrong...');\n      })\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <main>\n      <h2>Popular today</h2>\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <TrendingMoviesList trendingMovies={trendingMovies} />\n      )}\n    </main>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst SEARCH_URL = 'https://api.themoviedb.org/3/search/movie';\nconst TRENDING_URL = 'https://api.themoviedb.org/3/trending/movie/day';\nconst URL = 'https://api.themoviedb.org/3/movie';\nconst API_KEY = '87582cb7f63615fc9dcd406a264f6674';\n\nexport const movieDetailsAPI = async id => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n  });\n  const { data } = await axios.get(`${URL}/${id}?${searchParams}`);\n\n  return data;\n};\n\nexport const movieCastAPI = async id => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n  });\n  const { data } = await axios.get(`${URL}/${id}/credits?${searchParams}`);\n\n  return data;\n};\n\nexport const movieReviewsAPI = async id => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n  });\n  const { data } = await axios.get(`${URL}/${id}/reviews?${searchParams}`);\n\n  return data;\n};\n\nexport const searchMoviesAPI = async query => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n    include_adult: false,\n    query: query,\n  });\n  const { data } = await axios.get(`${SEARCH_URL}?${searchParams}`);\n\n  return data;\n};\n\nexport const trendingMoviesAPI = async () => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n    include_adult: false,\n  });\n  const { data } = await axios.get(`${TRENDING_URL}?${searchParams}`);\n\n  return data;\n};\n"],"names":["height","width","radius","color","ariaLabel","wrapperStyle","wrapperClass","visible","List","styled","LinkItem","Link","trendingMovies","location","useLocation","map","id","title","poster_path","to","state","from","src","alt","useState","setTrendingMovies","isLoading","setIsLoading","useEffect","trendingMoviesAPI","then","results","length","Notiflix","catch","finally","URL","API_KEY","movieDetailsAPI","searchParams","URLSearchParams","api_key","axios","data","movieCastAPI","movieReviewsAPI","searchMoviesAPI","query","include_adult"],"sourceRoot":""}