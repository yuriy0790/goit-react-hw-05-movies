{"version":3,"file":"static/js/729.651f3898.chunk.js","mappings":"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","sources":["components/Loader/Loader.jsx","components/TrendingMoviesList/TrendingMoviesList.Styled.js","components/TrendingMoviesList/TrendingMoviesList.jsx","webpack://react-homework-template/./src/components/SearchBar/SearchBar.module.css?35a0","components/SearchBar/SearchBar.jsx","pages/Movies/Movies.jsx","services/movieDataAPI.js"],"sourcesContent":["import { Puff } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <Puff\n      height=\"80\"\n      width=\"80\"\n      radius={1}\n      color=\"#4fa94d\"\n      ariaLabel=\"puff-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"\"\n      visible={true}\n    />\n  );\n};\n\nexport default Loader;\n","import styled from 'styled-components';\nimport { Link } from 'react-router-dom';\n\nexport const List = styled('div')`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 10px;\n`;\n\nexport const LinkItem = styled(Link)`\n  display: flex;\n  gap: 5px;\n  flex-wrap: nowrap;\n  flex-basis: 49%;\n  min-width: 250px;\n  border: 2px solid #8c46a3;\n  border-radius: 4px;\n  text-decoration: none;\n  font-size: 20px;\n  color: #75367d;\n\n  &.active {\n    background-color: blue;\n    color: #ffffff;\n  }\n\n  :hover:not(.active),\n  :focus-visible:not(.active) {\n    color: #ca3fdd;\n    background-color: #ffd0f448;\n    border-color: #8c46a37e;\n    transform: scale(1.02);\n  }\n`;\n","import PropTypes from 'prop-types';\nimport { useLocation } from 'react-router-dom';\n\nimport { List, LinkItem } from './TrendingMoviesList.Styled';\n\nconst TrendingMoviesList = ({ trendingMovies }) => {\n  const location = useLocation();\n  return (\n    <List>\n      {trendingMovies.map(({ id, title, poster_path }) => (\n        <LinkItem to={`/movies/${id}`} key={id} state={{ from: location }}>\n          <img\n            src={'https://image.tmdb.org/t/p/w500' + poster_path}\n            width=\"70px\"\n            alt={title}\n          ></img>\n          <p>{title}</p>\n        </LinkItem>\n      ))}\n    </List>\n  );\n};\nexport default TrendingMoviesList;\n\nTrendingMoviesList.propTypes = {\n  trendingMovies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string.isRequired,\n    }).isRequired\n  ).isRequired,\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"Searchbar\":\"SearchBar_Searchbar__qe5Sc\",\"SearchForm\":\"SearchBar_SearchForm__J+i1a\",\"SearchFormButton\":\"SearchBar_SearchFormButton__J-w2N\",\"SearchFormButtonLabel\":\"SearchBar_SearchFormButtonLabel__iHW4N\",\"SearchFormInput\":\"SearchBar_SearchFormInput__4T9IM\"};","import Notiflix from 'notiflix';\nimport { useState } from 'react';\n\nimport styles from './SearchBar.module.css';\n\nexport default function SearchBar({ onSubmit }) {\n  const [query, setQuery] = useState('');\n\n  const handleChange = event => {\n    setQuery(event.currentTarget.value.toLowerCase());\n  };\n\n  const handleSubmit = event => {\n    event.preventDefault();\n\n    if (query.trim() === '') {\n      Notiflix.Notify.failure(`Enter search query`);\n      return;\n    }\n    onSubmit(query);\n    reset();\n  };\n\n  const reset = () => {\n    setQuery('');\n  };\n\n  return (\n    <div className={styles.Searchbar}>\n      <form className={styles.SearchForm} onSubmit={handleSubmit}>\n        <button type=\"submit\" className={styles.SearchFormButton}>\n          <span className={styles.SearchFormButtonLabel}>Search</span>\n        </button>\n\n        <input\n          onChange={handleChange}\n          value={query}\n          className={styles.SearchFormInput}\n          type=\"text\"\n          autoComplete=\"off\"\n          autoFocus\n          placeholder=\"Search movies\"\n        />\n      </form>\n    </div>\n  );\n}\n","import Notiflix from 'notiflix';\nimport { useState, useEffect } from 'react';\nimport { useSearchParams } from 'react-router-dom';\n\nimport TrendingMoviesList from 'components/TrendingMoviesList/TrendingMoviesList';\nimport Loader from 'components/Loader/Loader';\nimport SearchBar from 'components/SearchBar/SearchBar';\n// import searchMoviesAPI from 'services/searchMoviesAPI';\nimport { searchMoviesAPI } from 'services/movieDataAPI';\n\nconst Movies = () => {\n  const [foundMovies, setFoundMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [searchParams, setSearchParams] = useSearchParams();\n\n  useEffect(() => {\n    const query = searchParams.get('query') ?? '';\n    if (!query) {\n      return;\n    }\n    setIsLoading(true);\n    searchMoviesAPI(query)\n      .then(({ results }) => {\n        if (!results.length) {\n          Notiflix.Notify.failure('There is no results');\n          return;\n        }\n        setFoundMovies(results);\n      })\n      .catch(() => {\n        Notiflix.Notify.failure('Something went wrong...');\n      })\n      .finally(() => setIsLoading(false));\n  }, [searchParams]);\n\n  const formSubmitHandler = searchQuery => {\n    setSearchParams({ query: searchQuery });\n    setFoundMovies([]);\n  };\n\n  return (\n    <main>\n      <SearchBar onSubmit={formSubmitHandler} />\n      {isLoading ? (\n        <Loader />\n      ) : (\n        <TrendingMoviesList trendingMovies={foundMovies} />\n      )}\n    </main>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst SEARCH_URL = 'https://api.themoviedb.org/3/search/movie';\nconst TRENDING_URL = 'https://api.themoviedb.org/3/trending/movie/day';\nconst URL = 'https://api.themoviedb.org/3/movie';\nconst API_KEY = '87582cb7f63615fc9dcd406a264f6674';\n\nexport const movieDetailsAPI = async id => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n  });\n  const { data } = await axios.get(`${URL}/${id}?${searchParams}`);\n\n  return data;\n};\n\nexport const movieCastAPI = async id => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n  });\n  const { data } = await axios.get(`${URL}/${id}/credits?${searchParams}`);\n\n  return data;\n};\n\nexport const movieReviewsAPI = async id => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n  });\n  const { data } = await axios.get(`${URL}/${id}/reviews?${searchParams}`);\n\n  return data;\n};\n\nexport const searchMoviesAPI = async query => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n    include_adult: false,\n    query: query,\n  });\n  const { data } = await axios.get(`${SEARCH_URL}?${searchParams}`);\n\n  return data;\n};\n\nexport const trendingMoviesAPI = async () => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n    include_adult: false,\n  });\n  const { data } = await axios.get(`${TRENDING_URL}?${searchParams}`);\n\n  return data;\n};\n"],"names":["height","width","radius","color","ariaLabel","wrapperStyle","wrapperClass","visible","List","styled","LinkItem","Link","trendingMovies","location","useLocation","map","id","title","poster_path","to","state","from","src","alt","SearchBar","onSubmit","useState","query","setQuery","reset","className","styles","event","preventDefault","trim","Notiflix","type","onChange","currentTarget","value","toLowerCase","autoComplete","autoFocus","placeholder","foundMovies","setFoundMovies","isLoading","setIsLoading","useSearchParams","searchParams","setSearchParams","useEffect","get","searchMoviesAPI","then","results","length","catch","finally","searchQuery","Loader","TrendingMoviesList","URL","API_KEY","movieDetailsAPI","URLSearchParams","api_key","axios","data","movieCastAPI","movieReviewsAPI","include_adult","trendingMoviesAPI"],"sourceRoot":""}