{"version":3,"file":"static/js/199.e6251815.chunk.js","mappings":"6JAiBA,IAfe,WACb,OACE,SAAC,KAAD,CACEA,OAAO,KACPC,MAAM,KACNC,OAAQ,EACRC,MAAM,UACNC,UAAU,eACVC,aAAc,CAAC,EACfC,aAAa,GACbC,SAAS,GAGd,C,gJCbYC,GAAOC,EAAAA,EAAAA,IAAO,KAAPA,CAAH,mFAMJC,GAAWD,EAAAA,EAAAA,IAAO,KAAPA,CAAH,6U,gDCHfE,EAAe,mCAAG,WAAMC,GAAN,kFAChBC,EAAe,IAAIC,gBAAgB,CACvCC,QAJY,qCAEQ,SAICC,EAAAA,EAAAA,IAAA,UAPb,qCAOa,YAAoBJ,EAApB,oBAAkCC,IAJnC,uBAIdI,EAJc,EAIdA,KAJc,kBAMfA,GANe,2CAAH,sDASrB,I,SCgCA,EArCgB,WACd,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAsCE,EAAAA,EAAAA,UAAS,MAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KAcA,OAZAC,EAAAA,EAAAA,YAAU,WACRD,GAAa,GACbb,EAAgBO,GACbQ,MAAK,YAAkB,IAAfC,EAAc,EAAdA,QACPL,EAAeK,EAChB,IACAC,OAAM,WACLC,IAAAA,OAAAA,QAAwB,0BACzB,IACAC,SAAQ,kBAAMN,GAAa,EAAnB,GACZ,GAAE,CAACN,KAGF,0BACGK,GACC,SAACQ,EAAA,EAAD,KACGV,GAAeA,EAAYW,QAAU,GACxC,SAACxB,EAAD,UACGa,EAAYY,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASvB,EAApB,EAAoBA,GAApB,OACf,UAACF,EAAD,YACE,oCAAYwB,MACZ,uBAAIC,MAFSvB,EADA,OAQnB,yEAIP,C","sources":["components/Loader/Loader.jsx","components/Reviews/Reviews.Styled.js","services/movieReviewsAPI.js","components/Reviews/Reviews.jsx"],"sourcesContent":["import { Puff } from 'react-loader-spinner';\n\nconst Loader = () => {\n  return (\n    <Puff\n      height=\"80\"\n      width=\"80\"\n      radius={1}\n      color=\"#4fa94d\"\n      ariaLabel=\"puff-loading\"\n      wrapperStyle={{}}\n      wrapperClass=\"\"\n      visible={true}\n    />\n  );\n};\n\nexport default Loader;\n","import styled from 'styled-components';\n\nexport const List = styled('ul')`\n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n`;\n\nexport const ListItem = styled('li')`\n  display: flex;\n  flex-direction: column;\n  padding: 5px;\n  margin: 5px;\n  gap: 5px;\n  max-width: 90%;\n  min-width: 250px;\n  border: 2px solid #8c46a3;\n  border-radius: 4px;\n  text-decoration: none;\n  font-size: 16px;\n  color: #a126b2;\n  background-color: #ffd0f420;\n  border-color: #8c46a37e;\n`;\n","import axios from 'axios';\n\nconst URL = 'https://api.themoviedb.org/3/movie';\nconst API_KEY = '87582cb7f63615fc9dcd406a264f6674';\n\nconst movieReviewsAPI = async id => {\n  const searchParams = new URLSearchParams({\n    api_key: API_KEY,\n  });\n  const { data } = await axios.get(`${URL}/${id}/reviews?${searchParams}`);\n\n  return data;\n};\n\nexport default movieReviewsAPI;\n","import { useParams } from 'react-router-dom';\nimport Notiflix from 'notiflix';\nimport { useState, useEffect } from 'react';\n\nimport { ListItem, List } from './Reviews.Styled';\n\nimport Loader from 'components/Loader/Loader';\nimport movieReviewsAPI from 'services/movieReviewsAPI';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviewsInfo, setReviewsInfo] = useState(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    movieReviewsAPI(movieId)\n      .then(({ results }) => {\n        setReviewsInfo(results);\n      })\n      .catch(() => {\n        Notiflix.Notify.failure('Something went wrong...');\n      })\n      .finally(() => setIsLoading(false));\n  }, [movieId]);\n\n  return (\n    <main>\n      {isLoading ? (\n        <Loader />\n      ) : (reviewsInfo && reviewsInfo.length) > 0 ? (\n        <List>\n          {reviewsInfo.map(({ author, content, id }) => (\n            <ListItem key={id}>\n              <p>Author: {author}</p>\n              <p>{content}</p>\n            </ListItem>\n          ))}\n        </List>\n      ) : (\n        <p>We don't have any reviews for this movie yet</p>\n      )}\n    </main>\n  );\n};\n\nexport default Reviews;\n"],"names":["height","width","radius","color","ariaLabel","wrapperStyle","wrapperClass","visible","List","styled","ListItem","movieReviewsAPI","id","searchParams","URLSearchParams","api_key","axios","data","movieId","useParams","useState","reviewsInfo","setReviewsInfo","isLoading","setIsLoading","useEffect","then","results","catch","Notiflix","finally","Loader","length","map","author","content"],"sourceRoot":""}